layer{
    name: "input"
    type: "MemoryData"
    # note - this is I guess just a convention that the top layers are "data and label"
    top: "data"
    top: "label"
    include {
        phase: TRAIN
    }

    # batching, 10 for now
   memory_data_param{
       batch_size: 10
       channels: 1
       height: 300
       width: 4096
   }
}

layer{
    name: "input"
    type: "MemoryData"
    # note - this is I guess just a convention that the top layers are "data and label"
    top: "data"
    top: "label"
    include {
        phase: TEST
    }
    # batching, 10 for now
   memory_data_param{
       batch_size: 10
       channels: 1
       height: 300
       width: 4096
   }
}
# input(10 * 1 * 300 * 4096)
layer {
    name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    convolution_param {
        # num_output = number of filters
        num_output: 400
        kernel_h: 7
        kernel_w: 4096
        stride_h: 1
        stride_w: 1
        weight_filler {
            type: "gaussian"
            std: 0.02
        }
        bias_filler {
            type: "gaussian"
            std: 0.001
        }
    }
}
# output(n_batch * num_output * 300 - num_output * 1)
# presently(10 * 400 * 293 * 1)
# in this layer, set kernel_h = 300 - [conv1]num_output
layer {
    name: "pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param {
        pool: MAX
        kernel_h: 293
        kernel_w: 1
        stride: 1
    }
}
# output: (n_batch * num_output * 1 * 1)
# presently: (10 * 400 * 1 * 1)
layer {
    name: "fc1"
    type: "InnerProduct"
    bottom: "pool1"
    top: "fc1"
    inner_product_param {
        num_output: 101
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
# output: (n_batch * num_output * 1 * 1)
# presently: (10 * 400 * 1 * 1)
layer {
    name: "accuracy"
    type: "Accuracy"
    bottom: "fc1"
    bottom: "label"
    top: "accuracy"
    include {
        phase: TEST
    }
}
layer {
    name: "softmax"
    type: "SoftmaxWithLoss"
    bottom: "fc1"
    bottom: "label"
    top: "softmax"
}
